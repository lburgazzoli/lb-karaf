// *****************************************************************************
//
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
    }
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'osgi'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'nexus'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    version             = '3.0.1.SNAPSHOT'
    group               = 'com.github.lburgazzoli'

    project.ext {
        versions = [
            slf4j              : '1.7.7',
            log4j2             : '2.0.2',
            felixConfigAdmin   : '1.8.0',
            karaf              : '3.0.1',
            guava              : '18.0',
            commonsLang        : '3.3.2',
            commonsCollections : '4.0',
            osgi               : '5.0.0',
            hazelcast          : '3.3',
            jackson            : '2.4.2',
            jacksonCore        : '2.4.2',
            jacksonDatabind    : '2.4.2',
            jacksonSmile       : '2.4.2',
            jacksonBson        : '2.4.0',
            lbHazelcast        : '3.3.0-SNAPSHOT'
        ]

        if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
            nexusUsername = sonatypeUsername
            nexusPassword = sonatypePassword
        } else {
            nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
            nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
        }

        isReleaseVersion    = !version.endsWith("SNAPSHOT")
        prefix              = 'lb'
        gitRoot             = "https://github.com/lburgazzoli"
        gitProject          = "https://github.com/lburgazzoli/lb-karaf"
        deploySnapshot      = "https://oss.sonatype.org/content/repositories/snapshots"
        gradleVersion       = '2.1'
        gradleScriptDir     = "${rootProject.projectDir}/gradle"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$versions.slf4j"
        compile "com.google.guava:guava:$versions.guava"
        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "org.apache.felix:org.apache.felix.configadmin:$versions.felixConfigAdmin"
        compile "org.apache.karaf.shell:org.apache.karaf.shell.console:$versions.karaf"
        compile "org.apache.karaf.shell:org.apache.karaf.shell.table:$versions.karaf"
        compile "org.osgi:org.osgi.core:$versions.osgi"
        compile "org.osgi:org.osgi.compendium:$versions.osgi"

        runtime "org.slf4j:slf4j-ext:$versions.slf4j"
        runtime "org.slf4j:jul-to-slf4j:$versions.slf4j"

        runtime "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-jcl:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"
    }

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "lb :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "lb :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "lb-${project.name}"
        manifest.attributes['Bundle-Version'         ] = project.version
        manifest.attributes['Implementation-Title'   ] = "lb-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version' ] = project.version
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath  = project.runtimeClasspath
    }

    nexus {
        attachJavadoc = true
        attachSources = true
        attachTests   = false
        sign          = false
    }

    modifyPom {
        project {
            name          = "${project.prefix}-${project.name}"
            description   = "${project.prefix}-${project.name}"
            url           = "${project.gitProject}"
            packaging     = 'jar'

            licenses {
                license {
                    name         = "The Apache Software License, Version 2.0"
                    url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url                 = "${project.gitProject}"
                connection          = "scm:git:${project.gitProject}.git"
                developerConnection = "scm:git:${project.gitProject}.git"
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

